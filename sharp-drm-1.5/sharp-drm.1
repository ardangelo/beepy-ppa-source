.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Sharp DRM Driver" "" "" "" ""
.hy
.SH Sharp Memory LCD Kernel Driver
.PP
DRM kernel driver for 2.7\[rq] 400x240 Sharp memory LCD panel.
.SS User Guide
.PP
This is a kernel device driver to provide a display device to the Linux
kernel.
.SS Font Configuration
.PP
This module automatically adds contents to the Raspberry Pi
\f[V]/boot/firmware/cmdline.txt\f[R] to configure the Linux framebuffer,
including font size.
.PP
The option \f[V]fbcon=font:VGA8x8\f[R] configures default font to a
smaller size, resulting in dimensions of 30 rows and 50 columns.
Can be changed to \f[V]font:VGA8x16\f[R] for a larger font.
More fonts and options for the \f[V]fbcon\f[R] module can be found at
https://www.kernel.org/doc/Documentation/fb/fbcon.txt
.SS \f[V]monoset\f[R] Utility
.PP
The \f[V]monoset\f[R] script in this repo is a helper to tune the
monochrome cutoff for an application.
It is installed by default on Beepy Raspbian.
If an application has problems with monochrome color, you can run
.IP
.nf
\f[C]
monoset [0 .. 255] <command>
\f[R]
.fi
.PP
The default driver monochrome cutoff is 32.
Setting a value of 0 will cause the whole screen to display on, and 255
to display off.
.PP
For example, the \f[V]nmtui\f[R] utility works best with a cutoff of
\f[V]127\f[R].
In the default Beepy Raspbian profile, there is an alias
.IP
.nf
\f[C]
alias nmtui=\[dq]monoset 127 nmtui\[dq]
\f[R]
.fi
.PP
This will automatically apply a cutoff of 127 when \f[V]nmtui\f[R] is
started from the shell.
You can add your own aliases to your profile at
\f[V]\[ti]/.profile\f[R].
.SS Module Parameters
.PP
Several options are exposed in the directory
\f[V]/sys/module/sharp_drm/parameters/\f[R].
Run
.IP
.nf
\f[C]
echo <setting> | sudo tee /sys/module/sharp_drm/parameters/<param>
\f[R]
.fi
.PP
To make changes persistent:
.IP \[bu] 2
Add \f[V]sharp_drm=<param>:<setting>\f[R] to
\f[V]/boot/firmware/cmdline.txt\f[R]
.IP \[bu] 2
Edit the file \f[V]/etc/modules\f[R] and change the line
\f[V]sharp-drm\f[R] to \f[V]sharp-drm <param>=<setting>\f[R]
.IP \[bu] 2
\f[V]auto_clear\f[R]: \f[V]1\f[R] to blank the screen when the display
driver is unloaded (default enabled).
If disabled, screen contents will remain until power is removed.
.IP \[bu] 2
\f[V]mono_cutoff\f[R]: Consider all pixels with one of R, G, B below
this threshold to be black, otherwise white (default \f[V]32\f[R])
.IP \[bu] 2
\f[V]mono_invert\f[R]: \f[V]0\f[R] for white-on-black, \f[V]1\f[R] for
black-on-white.
Can be toggled on-device by pressing Berry, then Zero (Meta mode + 0).
For more information on Meta mode keymappings, see
[https://github.com/ardangelo/beepberry-keyboard-driver/README.md]
.IP \[bu] 2
\f[V]overlays\f[R]: 0 to disable overlays (default enabled).
Not recommended to disable, overlays are used to display modifier key
state and key reference
overlays (https://github.com/ardangelo/beepy-symbol-overlay/README.md)
.SS Developer Reference
.SS Building from source
.PP
Install the Linux kernel headers
.IP
.nf
\f[C]
sudo apt-get install raspberrypi-kernel-headers
\f[R]
.fi
.PP
Build, install, and enable the kernel module:
.IP
.nf
\f[C]
make
sudo make install
\f[R]
.fi
.PP
To remove:
.IP
.nf
\f[C]
sudo make uninstall
\f[R]
.fi
.PP
Original fbdev module readme with pinouts and build
instructions (https://github.com/w4ilun/Sharp-Memory-LCD-Kernel-Driver/blob/master/README.md)
.SS References
.PP
Original SPI and GPIO kernel driver at:
.IP
.nf
\f[C]
https://github.com/w4ilun/Sharp-Memory-LCD-Kernel-Driver
\f[R]
.fi
.PP
Sharp datasheet:
.IP
.nf
\f[C]
https://www.sharpsde.com/fileadmin/products/Displays/2016_SDE_App_Note_for_Memory_LCD_programming_V1.3.pdf
\f[R]
.fi
